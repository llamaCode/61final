//PROJECT 5
//PEOPLE ARRAY
//MARIA CAMPAGNA
//CST 112
//PROFESSOR BAM

//***WORKING ON BUTTONS FOR PERCENTAGE INCREASES
//***WORKING ON NEXT ARRAY OF 11 OBJECTS

//--  Button[] buttons;
//--  String bname[] = {"20%", "15%", "10%", "5%"};
String bname[] = { "TALL", "WIDE", "SORT", "RAISE", "RESET", "QUIT"};
//BAM:  Above names are incomplete, but this is just an example.

//--  int btn = 4;
/*BAM*/  int btn=  bname.length;
Button[] buttons = new Button[btn];

String title = "Project 5";
String author = "By: Maria Campagna";
float bottom;

//NAMES FOR PERSONS
String star[] = { 
  "Skywalker", "Obi Wan", "Leia", 
  "Han Solo", "Chewbacca", "Yoda", "C3P0", "R2D2"
};

//8 PEOPLE IN THE LINE
int ppl = 8;
Person [] person = new Person[ppl];

//SETTING UP THE SCENE
void setup() {
  size(750, 550);
  bottom = height - 100;
  restart();
  // Define buttons.
  float x = width-30, y = 50;
  for (int a = 0; a < btn; a++) {
    buttons[a]= new Button(bname[a]);
    buttons[a].x=  x;
    buttons[a].y=  y;
    y += 60;
  }
}



//CREATING A RESTART POINT TO RANDOMIZE EACH PERSON
void restart() {
  for (int a = 0; a < ppl; a++) {
    person[a]= new Person(star[a]);
  }
}

//DRAWING EVERYTHING, CALLING OTHER VOIDS
void draw() {
  background(135, 206, 250);
  scene();
  messages();
  each();
  eachbut();
  news();
}

//SETTING THE BOTTOM OF THE SCREEN
void scene() {
  noStroke();
  fill(240, 255, 240);
  rectMode(CORNER);
  rect(0, bottom, width, height);
}

//CREATING MESSAGES
void messages() {
  fill(0);
  textSize(20);
  text(title, width/3, 30);
  textSize(20);
  text(author, 10, 150);
  textSize(12);
  help();
}

//SETTING A HELP BAR
void help() {
  text("Use R to reset and Q to quit", 10, 40);
  text("T moves the tallest person to the end, M moves the shortest person to the end", 10, 60);
  text("W moves the widest person to the end, N moves the narrowest to the end", 10, 80);
  text("B gives the stars a + $100 if they're over 18 years old", 10, 100);
  text("S sorts from short to tall", 10, 120);
}

//WHERE EACH PERSON IS DISPLAYED
void each() {
  float x = 50, y = bottom;
  for (int a = 0; a < ppl; a++) {
    person[a].show (x, y);
    x = x + 90;
  }
}
//WHERE EACH BUTTOn IS DISPLAYED
void eachbut() {
  for (int a = 0; a < btn; a++) {
    buttons[a].display ();
  }
}

//LETTING YOU KNOW INFO ON TALLEST, SHORTEST ETC...
void news() {
  int x = 500, y = 10, line = 2, next = 20;
  int max, min, wide, narrow;
  float tot, avg; 

  max = tallest(person, ppl);
  min = shortest(person, ppl);
  
  wide = widest(person,ppl);
  narrow = narrowest(person,ppl);

  tot = 0;

  for (int a = 0; a < ppl; a++) {
    tot += person[a].h;
  }

  avg = tot/ppl;

  fill(0);
  text("I am the tallest  " + person[max].name, x, next*line++);
  text("I am the shortest  " + person[min].name, x, next*line++);
  text("I am the widest " + person[wide].name, x, next*line++);
  text("I am the narrowest " + person[narrow].name, x, next*line++);
  text("The average weight is  " + avg, x, next*line++);
  
}

//KEY PRESS BUTTONS
void keyPressed() {
  if (key == 'q' ) exit();
  if (key == 'r' ) restart();
  if (key == 't' ) tall(person, ppl);
  if (key == 'm' ) mini(person, ppl);
  if (key == 'w' ) swap(person, ppl-1, widest(person, ppl));
  if (key == 'n' ) swap(person, ppl-1, narrowest(person, ppl));
  if (key == 's' ) sorting(person, ppl);
}

//BAM:  For this example, buttons were: "TALL", "MINI", "SORT", "RAISE", "RESET", "QUIT"

//MOUSE PRESS BUTTONS
void mousePressed() {
  int n=0;
  if (buttons[n++].hit( mouseX, mouseY )) tall(person, ppl);
  if (buttons[n++].hit( mouseX, mouseY )) mini(person, ppl);
  if (buttons[n++].hit( mouseX, mouseY )) sorting(person, ppl);
  if (buttons[n++].hit( mouseX, mouseY )) raiseall(person, ppl);
  if (buttons[n++].hit( mouseX, mouseY )) restart();
  if (buttons[n++].hit( mouseX, mouseY )) exit();
  println( "n="+n );
}



//// GIVE RAISES TO ALL
void raiseall(Person[] p, int m) {
  for (int a = 1; a < m; a++) {
    if (p[a].age<18) return;    // No raise if underage.
    //
    float pct;
    float sal=  p[a].salary;
    print( "\n\n $" + sal );
    // First, determine the percentage.
    if (sal<25000) pct=20;
    else if (sal<50000) pct=15;
    else if (sal<75000) pct=10;
    else pct=5;
    // now give the raise.
    p[a].raise( pct );
    println( pct + "%" );
  }
  return;
}


//SMALLEST VOID & INT
void mini(Person[] p, int m) {
  int mini;
  mini = shortest(p, m);
  swap (p, mini, m-1);
}

int shortest(Person[] p, int m) {
  int imshort = 0;
  for (int a = 1; a < m; a++) {
    if (p[a].h < p[imshort].h) imshort = a;
  }
  return imshort;
}

//TALLEST VOID & INT
void tall(Person[] p, int m) {
  println( "tall" +m);
  int tall;
  tall = tallest(p, m);
  println("swap"+ tall +","+(m-1));
  swap(p, tall, m-1);
}

int tallest(Person[] p, int m) {
  int imtall = 0;
  for (int a = 1; a < m; a++) {
    if (p[a].h > p[imtall].h) imtall = a;
  }
  return imtall;
}

//WIDEST INT
void wide(Person[] p, int m) {
  int wide;
  wide = widest(p, m);
  swap (p, wide, m-1);
}

int widest(Person[] p, int m) {
  int imwide = 0;
  for (int a = 1; a < m; a++) {
    if (p[a].w > p[imwide].w) imwide = a;
  }
  return imwide;
}

//NARROWEST INT
void narrow(Person[] p, int m) {
  int nar;
  nar = narrowest(p, m);
  swap (p, nar, m-1);
}

int narrowest(Person[] p, int m) {
  int imnar = 0;
  for (int a = 1; a < m; a++) {
    if (p[a].w < p[imnar].w) imnar = a;
  }
  return imnar;
}

//SORT PEOPLE BY HEIGHT
void sorting(Person q[], int m) {
  for (int k = m; k > 1; k--) {
    println ("*** k =" + k);
    tall(q, k);
  }
}

//SWAPPING PEOPLE
void swap(Person[] p, int a, int b) {
  Person tmp;
  tmp = p[a];
  p[a] = p[b];
  p[b] = tmp;
}


//CREATING THE CLASS
class Person {
  float w, h;
  float a, s;
  float r, g, b, rt, bt, gt;
  String name = "?";

  float salary;
  int age;

  Person(String star) {
    w = random (20, 100);
    h = random (50, 200);

    a = random(0, 99);
    s = random(1000, 10000);

    r = random(255);
    g = random(255);
    b = random(255);

    rt = random(200);
    bt = random(200);
    gt = random(200);
    
    age=  int( random(1,99));
    //--  if (age>=18) salary=  random(100,000);
    //BAM:    This sets salary to a random number betwee 100 and zero!
    /*BAM*/  if (age>=18) salary=  random(100000);
    else salary=0;

    name = star;
  }

  void show(float x, float y) {
    fill(r, g, b);
    rectMode(CENTER);
    rect(x, y-h/2, w, h);

    float top = y-h;
    float he = h/2;

    head(x, top-he/2, he);

    fill(0);
    text(name, x-20, y+20);

    text(int(a), x-20, y+55);

    if (a > 18) {
      //--  text('$' + int(s), x-20, y+66);
      text("$ " + int(s), x-20, y+66);
    }
    
    if (keyPressed == true) {
      if (key == 'b') {
        s = s + 100;
      }
    }

    text(int(w), x-20, y+88);
    text(int(h), x-20, y+99);

    fill(255);
    text(name, 2+x-w/2, y-h/2);
  }

  void head(float x, float hy, float he) {
    fill(rt, gt, bt);
    ellipse(x, hy, he, he);

    fill(255, 192, 203);
    ellipse(x, hy+5, 10, 10);

    eye (x-10, hy-6);
    eye (x+10, hy-6);
  }

  void eye(float x, float y) {
    fill(255);
    ellipse(x, y, 10, 10);
    fill(0);
    ellipse(x, y, 5, 5);
  }
  
  // Raise salary by specified pct %
  void raise( float pct ) {
    println( "\nraise:  "+ pct );
    if (age < 18) return;
    salary += salary * pct / 100;
    s += s * pct / 100;
    //BAM:  Duplicate properties (s & salary, a and age)
  }
  
}//class//

class Button {
  float x,y;
  float w, h;
  float r, g, b;
  String butname = "?";
  
  Button(String bname) {
    w = 50;
    h = 50;
    
    butname = bname;
  }
  Button(String bname, float x, float y) {
    this.x=  x;
    this.y=  y;
    w = 50;
    h = 50;
    
    butname = bname;
  }

  //BAM:  Simplerdisplay if you use Object-Oriented design.  
  void display(){
    fill(255);
    rectMode(CENTER);
    rect(x, y, w, h);
    fill(0); 
    text( butname, x+10-w/2, y );
  }

  void display(float x, float y){
    fill(255);
    rectMode(CENTER);
    rect(x, y, w, h);

    /*BAM*/  fill(0); text( butname, x+10-w/2, y );

  }

  // Return true if this button was hit.
  boolean hit( float xx, float yy ) {
    return ( abs(x-xx) < w/2  &&  abs(y-yy) < h/2 );
    // (True if distance from center is within width & height ).
  }
  
  
}//class//
